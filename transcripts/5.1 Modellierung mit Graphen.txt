 Willkommen zurück zur Vorlesung Diskrete Strukturen. In dieser Woche fangen wir das dritte und letzte Kapitel an, nämlich die Grafentheorie. Eigentlich ist das ein relativ einfaches Konzept, nämlich wollen wir einfach binäre Relationen als Verbindungen zwischen den Elementen darstellen, aber es stellt sich heraus, dass es ein extrem mächtiges Mittel ist, Dinge zu modellieren. Zum Beispiel sehen wir hier einen Ausschnitt des World Wide Webs zu einem gewissen Zeitpunkt, wobei hier diese Knotenpunkte sollen Webseiten sein, die halt irgendwie Adressen haben, wo sie gehostet werden und zwei solcher Webseiten sind verbunden, wenn die eine auf die andere verweist mit einem Link zum Beispiel. Sie sehen, dass diese relativ einfache Beschreibung, einfach zwei Webseiten verlinkt ineinander, zu einem extrem komplizierten Gebilde führen kann, oft so viele Daten angewendet. Und mit ein Grund, warum diese Darstellung so erfolgreich ist, ist, dass es fürs menschliche Auge leicht verdaulich ist. Also zum Beispiel, wenn wir uns hier unten diesen Ausschnitt mal angucken, dann können Sie sofort sehen, dieses Ding hier in der Mitte, diese Webseite verlinkt auf diese vielen anderen Webseiten oder wird verlinkt von denen. Wenn Sie jetzt nur eine Liste hätten mit Paaren, dann ist es schon sehr, sehr viel schwieriger zu begreifen. Oder wenn Sie in diesem ganzen Bild hier sehen, also ich meine hier unten so eine Webseite und auf dem ganzen anderen Ende der Webseite, dann können Sie darüber sagen, dass sie relativ weit voneinander entfernt sind, sozusagen. Also Sie müssen vielen Links folgen, um von der einen zur anderen zu kommen, was Sie auch nicht normalerweise sehen würden, wenn Sie nur eine Liste dieser Links vor sich zu liegen hätten. Also diese grafische Darstellung, die hilft unter anderem der menschlichen Erkenntnis. Im Allgemeinen bestehen Grafen aus, wie gesagt, zwei Komponenten. Das eine ist eine Menge von Punkten und das andere ist eine Menge von Linien, die die Punkte verbinden, wie Sie eben gerade im Bild schon gesehen haben. Es stellt sich heraus tatsächlich, dass sich viele Situationen beziehungsweise Probleme durch ein solches Schema erfassen lässt, obwohl das Schema eigentlich nur eine Darstellung von einer binären Relation ist. Je nachdem, ob diese binäre Relation, die dargestellt wird, symmetrisch ist oder nicht, sprechen wir von einem gerichteten beziehungsweise einem ungerichteten Grafen. Wenn man nur sagt Graf, meint man eigentlich immer ungerichtete Grafen. Also machen wir das mal zuerst. Ein ungerichteter Graf ist also dieses Paar, wobei V die Menge der Knoten ist und das kommt daher, weil V im Englischen sagen wir Vertices, beziehungsweise manchmal hört man auch Notes, aber daher kommt jedenfalls dieses V. Und E ist eine Teilmenge der Menge der zwei elementigen Teilmengen. Also mit anderen Worten, E enthält zwei elementige Teilmengen über dieser Knotenmenge Groß V. Und die heißt E, weil im Englischen sagen wir Edges dazu. Vielleicht ist noch zu erwähnen, dass diese zwei elementigen Teilmengen bitte wirklich zweielementig sein sollen und nicht einelementig, wenn nämlich die beiden Elemente hier dasselbe jeweils wäre, dann wäre diese Menge hier vorne nur eine einelementige Menge und das wollen wir nicht erlauben. Deswegen ist hier die zusätzliche Bedingung x ungleich y. Und eigentlich wäre es besser hier ein und zu schreiben, statt so ein Komma. Und das ist also ein ungerichteter Graf. Und dann gibt es auch noch gerichtete Grafen. Die nennen wir meistens D für directed. Und da heißt das Paar jetzt nicht V E, wie hier oben, sondern V A. Also natürlich können sie die Mengen nennen, wie sie wollen, aber häufig benutzt man jetzt hier als zweite Menge A, weil es im Englischen Arcs sind. Also gerichtete Kanten, sagen wir im Deutschen. Also nur wieder ein Paar von zwei Dingen. Das erste ist eine Menge von Knoten und das zweite ist eine Menge von geordneten Paaren diesmal. Beziehungsweise, geordnete Paare kann man interpretieren als gerichtete Kanten von dem ersten Element zum zweiten Element. Zum Beispiel könnte ihre Knotenmenge V so aussehen, dass sie da A, B, C und D drin haben. Und ihre Kantenmenge E könnte zum Beispiel so aussehen. Da sind in diesem Fall drin A, B, C, B, C und C, D, aber B, D wäre zum Beispiel nicht drin. Die Zweiermenge B, D ist nicht in der Kantenmenge drin. Na ja, und dann können wir das halt wieder so aufmalen, wie bei dem World Wide Web Bild, was wir gesehen haben. Wir malen also die Knoten so als Kringel hin und dann zwischen zwei Kringeln malen wir jeweils so eine Verbindung hin für alle diese Kanten. Also das habe ich jetzt, BC habe ich hingemalt und dann kommen noch A, B hin, diese Kante AC, diese Querkante hier und dann CD, diese hier. Jetzt habe ich AD irgendwie verschludert. Ach, die gibt es gar nicht. Aha, okay, also AD gibt es gar nicht. So, also AD ist auch nicht drin. Okay, jetzt sagt Ihnen das Konstrukt des ungerichteten Graphen ja nicht unbedingt, wie genau sie den hinmalen sollen. Das Konstrukt sagt Ihnen nur, diese Kringel gibt es und diese beiden Kringel sind verbunden, diese beiden verbunden, diese beiden und diese beiden verbunden. Das wäre genauso valide, zum Beispiel so hin zu malen. Und das sieht man halt auch manchmal. Insbesondere noch vielleicht ein anderer Unterschied ist, dass hier einfach die Namen der Elemente einfach daneben gemalt wurden und hier wurden die Namen der Elemente jetzt so in diese Kringel reingemalt. Das ist auch nicht, irgendwie, da gibt es kein enormes Vorgehen oder sowas. Hauptsache, man kann irgendwie erkennen, welcher Kringel zu welchem Element aus V gehört. Wenn ich Ihnen jetzt gar nicht an die Kringel heranschreibe, welche Elemente das sind und Sie frage, hey, schaffen Sie es, die Kringel zu beschriften mit den Elementen aus dieser V-Menge, sodass die Verbindung hier genau zwischen denen Elementen sind, die diese Kantenmenge hier angibt, dann sprechen wir da vom Isomorphie-Problem. Das ist ein relativ, im Allgemeinen ein relativ schwieriges Problem und davon, da werden wir später noch was darüber erfahren. Für ungerichtete Graphen machen wir jetzt so eine Pfeile statt einfach nur eine Kante dazwischen. Die sind quasi markiert, von wo nach wo die gehen. Zum Beispiel dieser Pfeil, den ich jetzt hier dick gemalt habe, das wäre quasi das geordnete Paar BC, weil der Pfeil von B nach C geht. Und jetzt kann es aber auch, zum Beispiel hier in der Mitte sehen Sie, das Beispiel hat das geordnete Paar CD und das geordnete Paar DC. Also obwohl die komplette Relation nicht symmetrisch ist, ist in diesem Falle diese, auch C und D ist die Relation symmetrisch. Und dann malen wir hier halt beide Pfeile ein und dann sind die halt manchmal so geschwungen, aber im Allgemeinen versuchen wir, Pfeile so gerade wie möglich zu malen. Aber wie man das jetzt genau malt, ist nicht vorgeschrieben von der Definition von Graphen, gerichtet oder ungerichtet. Weil sie weniger praktische Bedeutung haben, normalerweise bei Beispielen, die man im ehrglichen Leben so antrifft, sind üblicherweise die reflexiven Paare ausgeschlossen. Das sieht so aus, dass sie einen Knoten haben und der steht mit sich selbst in Relation. Sie sehen es schon so ein bisschen in dieser Zeichnung, wir nennen diese Dinger Schleifen, beziehungsweise im englischen Loops. Und wenn wir das verbieten, das soll nicht vorkommen, dann sprechen wir von einem einfachen Graph. Beziehungsweise, wie gesagt, normalerweise ist es implizit verstanden, dass wenn ich sage ungerichteter Graph, dass es ein einfacher Graph ist. Oder ein gerichteter Graph, dass es ein einfacher gerichteter Graph ist. Dann ist auch noch vielleicht interessant, dass wenn diese zweite Komponente, also die Relation, überdistributiert, wenn es nicht nur irgendwie eine Menge ist, sondern eine Multimenge, also es mehrere Relationspaare unter Umständen häufiger enthalten kann, dann sprechen wir von einem Multigraph. Das sieht dann so aus, dass sie zwischen zwei Knoten vielleicht mehrere Kanten haben. Beziehungsweise kriegen wir auch mehrere gerichtete Kanten. Je nachdem, ob sie halt in einem gerichteten Graphen oder in einem ungerichteten Graphen sind. Genau, also das ist jetzt U und V und die Menge E würde quasi dann eine Multimenge sein. Also U und V enthalten, dann nochmal U und V enthalten und ein drittes Mal U und V enthalten. Über Multimengen hatten wir ja schon geredet. Wenn wir uns jetzt im nächsten Abschnitt mal anschauen, was man alles mit Graphen modellieren kann. In unserem ersten Beispiel geht es um Ökologie, nämlich den sogenannten Nischen- überlappungs-Graph. Da haben wir als Knoten die Spezies, also jeder Kringel ist eine Spezies und es gibt eine Kante zwischen zwei Kringeln, wenn deren Spezies im Wettbewerb um dieselbe Nahrung stehen. Und zum Beispiel haben wir jetzt hier so ein ausgedachtes Beispiel für ein Ökosystem des Waldes. Und dann sehen wir zum Beispiel das, so ein Habicht hier. Also wie gesagt, die Kringel sind eine Spezies. Hier haben wir eine Kringel, die ist beschriftet mit Habicht, die steht quasi für die Habicht-Spezies. Dann haben wir hier noch eine Kringel, da steht Eule dran und da haben wir eine Kante dazwischen, weil der Habicht und die Eule irgendwie dieselben Dinge mampfen, aus irgendwelchen Gründen. Also die stehen zumindest im Wettbewerb um dieselbe Nahrung. Dagegen ist es aber so, dass so ein Waschbär hier nicht im Wettbewerb mit der Maus zum Beispiel steht um die Nahrung. Kann verschiedene Gründe haben, zum Beispiel mögen die nicht dasselbe oder sind in anderen Teilen des Waldes zu Hause. Auf jeden Fall stehen sie nicht im Wettbewerb um dieselbe Nahrung, deswegen gibt es ja auch keine Kante zwischen den beiden. Und mit diesen Daten oder dieser Information, die wir jetzt hier haben, lassen sich Fragen der Datenverarbeitung stellen. Zum Beispiel, wenn wir wissen möchten, was ist die größtmögliche Menge von Spezies, die wir in einem Wald ansiedeln könnten, ohne dass sie sich gegenseitig das Futter wegnehmen. Also was wäre eine größtmögliche Menge von nicht miteinander konkurrierenden Spezies in diesem Graphen hier. Und so eine Menge von nicht benachbarten Knoten in einem Graphen nennen wir unabhängige Menge oder im Englischen independent set oder stable set. Wenn Sie wollen, können Sie ja mal versuchen hier eine größtmögliche unabhängige Menge zu finden in dem Graphen, aber ich habe sie auch gleich noch mal hingemalt. Das heißt, wenn Sie selber überlegen wollen, dann müssen Sie kurz pausieren. Und das hier ist eine Lösung davon. Die Lösung enthält jetzt hier vier Spezies und es ist nicht möglich fünf Spezies auszuwählen, die nicht miteinander konkurrieren. Also wenn Sie fünf Spezies auswählen in dem Graphen, finden Sie immer zwei, die miteinander konkurrieren bzw. die eine Kante zwischen sich haben. Im Allgemeinen ist das Problem, so eine größtmögliche unabhängige Menge zu finden, ein algorithmisch sehr sehr schwer zu lösen das Problem. Obwohl es für kleine Beispiele wie das hier jetzt zum Beispiel vielleicht noch relativ einfach erscheint. Aber wenn halt die Graphen größer und kompliziert werden, denken Sie zum Beispiel zurück an diesen Internetgraphen, den wir hatten, dann wird es schon sehr sehr schwierig. Unser zweites Fallbeispiel kommt aus der Soziologie. Das ist nämlich ein Einflussgraph. Heutzutage nennt man das wahrscheinlich Influencer-Graph. Aber okay, es geht um Einfluss in sozialen Netzwerken. Das heißt, unsere Knoten sind Menschen, die Einfluss nehmen bzw. auch die Einfluss genommen wird. Und da das zwei unterschiedliche Konzepte sind, Einfluss zu nehmen oder dass auf jemanden Einfluss genommen wird, wird das jetzt hier ein gerichteter Graph. Nämlich wir haben die Relation, also die gerichtete Kante AB ist in unserem ArcSet A, falls die Person A Einfluss auf die Person B hat. Und merken Sie schon, dass es nicht symmetrisch diese Relation, also nur weil A Einfluss auf B hat, heißt es nicht, dass B Einfluss auch auf A hat. Also das wird im Allgemeinen eine nicht-symmetrische Relation sein. Und nicht-symmetrische Relation modellieren wir mit gerichteten Graphen. Also zum Beispiel könnte das so aussehen. Das heißt, wir haben hier fünf Personen A bis E und die nehmen Einfluss aufeinander. Unter anderem, es kann natürlich trotzdem immer noch so sein, dass eine Person, hier zum Beispiel Person B, Einfluss auf Person E hat und gleichzeitig Person E Einfluss auf Person B hat. Hier wäre jetzt eine mögliche Fragestellung. Zum Beispiel würden wir eine möglichst kleine Menge an Personen haben, die alle anderen beeinflussen können. Also zum Beispiel wollen wir alle Personen in dem Graphen von irgendwie was überzeugen. Also wollen wir wissen, okay, was ist die kleinste Menge an Personen, die wir von irgendwas überzeugen müssen, damit die dann mit ihrem Einfluss andere Personen überzeugen, sodass am Ende der gesamte Graph überzeugt ist. Also alle Personen im Graph. Und diese Frage ist eine Frage nach einer dominierenden Menge. Also diese Menge an Personen, die alle anderen beeinflusst, das nennt man eine dominierende Menge im englischen Dominating Set. Und Sie können sich auch wieder überlegen, welche Menge an Personen eine dominierende Menge wäre. Aber ich habe es auch hier vorbereitet. Also Sie müssen jetzt kurz pausieren und sich überlegen, wenn Sie wüllten, ansonsten zeige ich es jetzt auch. Also die beiden Personen hier, die haben Einfluss auf alle anderen Personen. Warum ist es so? Also C hat Einfluss auf A. C hat auch Einfluss auf B und D. Also sind jetzt hier auf der linken Seite quasi alle beeinflusst. Aber das E wäre noch nicht, wenn ich nur C auswählen würde, wäre das E jetzt noch nicht beeinflusst. Das heißt, entweder muss ich E selbst in meine Menge aufnehmen oder ich könnte alternativ auch B in meine Menge aufnehmen, weil B Einfluss hat auf E. Beim Problem der dominierenden Menge, also eine kleinstmögliche dominierende Menge zu finden in einem gerichteten Graphen, beziehungsweise können Sie es auch formulieren in einem ungerichteten Graphen, dann folgt halt diese Dominierung nicht unbedingt nur in so einer gerichteten Kante, sondern funktioniert in beide Richtungen. In jedem Fall ist das auch wieder eine algorithmisch sehr sehr schwierige Aufgabe. Unser drittes Beispiel kommt aus der Kategorie Sport und Spiel. Es geht nämlich um Turniergraphen oder im englischen Tournament. Da können Sie sich vorstellen, nachdem Teams eins gegen eins gegeneinander gespielt haben, können Sie modellieren, wer gegen wen gewonnen hat zum Beispiel. Das heißt, Sie hätten als Knotenmenge haben Sie die Menge aller Teams und Sie haben eine gerichtete Kante von Team A nach Team B, wenn Team A das Team B schlägt in einem Spiel. Und dann könnte das zumindest beispielhaft so aussehen. In diesem Falle ist es, achso genau, in Tournaments ist es halt so, dass jedes Team gegen jedes andere Team einmal gespielt haben muss und also zwischen je zwei Teams immer ein Resultat existiert. Das Resultat kann halt entweder in die eine Richtung gehen, wenn das erste Team gewonnen hat oder in die andere Richtung, wenn das zweite Team gewonnen hat. Zum Beispiel, sagen wir mal, hier das Team Nummer vier hat jetzt gewonnen gegen Team Nummer fünf und gegen Team Nummer sechs, aber gegen die anderen drei Teams hat es verloren. Und jetzt könnten Sie natürlich auch wieder nach zum Beispiel einer dominierenden Menge, einer kleinsten dominierenden Menge fragen und tatsächlich ist es in Tournament-Graphen weit einfacher zu lösen als in generellen gerichteten Graphen. Damit Sie noch ein bisschen ein weiteres Gefühl bekommen für die Modellierung mit Graphen, bombardiere ich Sie noch so ein bisschen mit weiteren Beispielen. Da haben wir nämlich den Co-Autoren-Graph, wo die Knoten Wissenschaftler sind und es gibt eine ungerichtete Kante zwischen zwei Wissenschaftlern x und y, wenn die Autoren eines gemeinsamen Papiers sind. Und hier könnten Sie natürlich auch wieder zum Beispiel nach einer dominierenden Menge fragen, einer kleinsten. Interpretiert in Sim-Graphen wäre eine dominierende Menge, ja eine Menge von Wissenschaftlern, sodass jeder Wissenschaftler schon mal mit mindestens einem von diesen selektierten Wissenschaftlern zusammengearbeitet hat. Da können Sie irgendwas reininterpretieren. Zum Beispiel sind die vielleicht besonders fachübergreifend bzw. interdisziplinär oder sowas. Dann haben wir hier nochmal diesen World Wide Web-Graphen, wo wie gesagt die Knoten Webseiten sind und sie eine gerichtete Kante haben, wenn eine Seite auf eine andere Seite verlinkt. Und das ist eigentlich auch wieder eine nicht-symmetrische Relation, nur weil eine Seite auf eine andere verlinkt, heißt das nicht, dass die andere wieder auf die erste zurück verlinken müsste. Insbesondere kann man hier anmerken, dass dieser Graph sehr dynamisch ist, weil ständig Webseiten hinzukommen, verändert werden oder wegfallen. Als drittes Beispiel habe ich Ihnen noch so ein Programmabhängigkeits- Graph mitgebracht. Da geht es darum, dass wir hier so ein Programm haben wie dieses zum Beispiel und die Knoten in unserem Abhängigkeits-Graph sind Anweisungen des Programms. Und wir haben eine Kante von einer Anweisung zur, also von der Anweisung A zur Anweisung B, falls die Anweisung A vor der Anweisung B ausgeführt werden muss. Also sprich die Anweisung B hängt ab von der Ausführung der Anweisung A. Zum Beispiel, wenn wir uns hier anschauen die Anweisung S3, dann sehen wir, dass die abhängig ist vom Wert von A, weil die sagt, okay der Wert von C wird gesetzt auf den Wert von A plus 1. Das heißt, die hängt aber ab davon, was wir auf A gesetzt haben. Das heißt, die hängt von der Anweisung S1 ab und deswegen haben wir hier so ein Pfeil in dem Graphen von S1 nach S3. Dann können Sie weiterhin beobachten, dass zum Beispiel diese Anweisung S6, die sagt, okay der Wert von E, dem wird zugewiesen der Wert von C plus den Wert von D. Das heißt, diese Anwendung hängt unter anderem, diese Anweisung hängt unter anderem ab von dieser Anweisung hier S3, weil die ist die Anweisung, die den Wert von C setzt. Und deswegen haben wir hier noch diesen zweiten Pfeil, dass S3 bitte vor S6 ausgeführt werden muss. So und da S1 vor S3 und S3 vor S6 ausgeführt werden muss, heißt es auch, dass S1 vor S6 ausgeführt werden muss. Und bei solcher Kante handelt es sich jetzt um eine sogenannte transitive Kante. Denn Sie erinnern sich vielleicht an die Definition von Transitivität. Wenn wir S1, S3 in diesem Falle in A haben und S3, S6 in A haben, dann folgt daraus, dass wir S1, S6 in A haben. Und das heißt, die Existenz dieser Kante ist mit impliziert, deswegen habe ich die nicht extra noch mal hingemalt. Aber die existieren natürlich trotzdem in der Relation, diese Paare. Und so eine Information könnte Ihnen jetzt zum Beispiel helfen, Ihr Programm zu parallelisieren. Also zum Beispiel können Sie hier sehen, dass sich S1 und S2 beide parallel ausführen lassen, weil sie nicht voneinander abhängen. Und dann könnten Sie in einem zweiten Schritt meinetwegen hier S3 und S4 parallel ausführen, weil die auch nicht voneinander abhängen. Und dann können Sie im letzten Schritt S6 und S5 parallel voneinander, also parallel zueinander ausführen. Also mit Hilfe dieses Graphens können Sie detektieren, welche Anweisungen voneinander abhängen, also mit anderen Worten, welche Sie parallel zueinander ausführen können, ohne dass es Schwierigkeiten gibt. Am Ende dieses Abschnittes noch irgendwie die Geschichte, bzw. die Anekdote überhaupt für Graph-Theorie. Das ist nämlich die, dass Leonard Euler sich in Königsberg wiedergefunden hat. Und Königsberg hat sieben Brücken, die vier Stadtteile verbinden. Sie sehen das hier schematisch aufgemalt. Der Fluss, hier diese Prägel in hellblau und dann gibt es diese sieben Brücken, die existieren in dunkelblau. Und die Frage an Euler war jetzt, ob es möglich ist, in einem beliebigen Punkt in der Stadt zu starten. Also, weiß ich nicht, zum Beispiel in diesem Haus hier zu starten. Und dann durch die Stadt zu schlendern und weil die Brücken so schön sind, über jede der Brücken zu gehen, aber halt nur genau einmal. Erstmal würde man über diese Brücke hier gehen wollen. Dann könnte man über die Brücke hier laufen, dann wieder zurück über die Brücke, hier über diese Brücke. Dann vielleicht über diese Brücke, hier noch ein bisschen durch die Stadt. Und dann könnte man über diese Brücke gehen und jetzt wäre man irgendwie in Verlegenheit, weil um aus diesem mittleren Stadtviertel zu kommen, müsste man über eine Brücke gehen, über die man schon mal gelaufen ist. Weil man will ja auch immer noch hier über diese andere Brücke drüber gehen. So, das heißt, wie ich es jetzt gemacht habe, geht es nicht. Aber vielleicht war ich ja nur zu blöd. Und es gibt tatsächlich irgendwo einen Punkt, von dem wir anfangen können, über jede Brücke genau einmal drüber gehen. Und dann am Ende zu dem Punkt schließlich den Ausgangspunkt wieder zu erreichen. Wir wollen ja auch wieder nach Hause, nachdem wir die Stadt gesehen haben. Und das lässt sich jetzt sehr gut mit einem Grafen, beziehungsweise in diesem Fall einem Multigrafen, modellieren. Wir haben jetzt als Knoten die Stadtteile, Sie sehen hier A, B, C und D. Und die Kanten entsprechen genau den Brücken. Das heißt, für jede Brücke gibt es hier genau eine Kante. Und was wir jetzt also machen wollen, ist von irgendeinem dieser Knoten zu starten. Und auf so eine Art und Weise in dem Grafen einen Rundgang zu haben, dass wir wieder zurückkommen in unser Ausgangsstadtviertel. Einen solchen Rundgang bezeichnet man auch als eine Euler-Tour. Zu Ehren von genau Euler halt. So, falls Sie sich erinnern, mein Versuch gerade eben, der ging hier los im Stadtteil A. Irgendwo war diese Brücke zum Stadtteil C. Dann hatte ich, glaube ich, diese Brücke genommen zum Stadtteil B. Dann war ich wieder zum Stadtteil A zurück und zum B wieder. Dann habe ich, glaube ich, die hier unten genommen, um zum Stadtteil D zu kommen und wieder zurück zum Stadtteil B. Und dann ging es nicht mehr weiter. Dann war ich irgendwie festgesteckt. Obwohl ich immer noch eine Brücke nicht gesehen hatte. Die nämlich zwischen Stadtteil C und D. Und wenn Sie wollen, können Sie wieder ein bisschen rumprobieren, ob Sie es vielleicht schaffen. Ich mache das mal wieder weg, damit Sie ein bisschen eine freie Bahn haben zum Malen. Genau, vielleicht schaffen Sie es ja, aber ich löse es jetzt auch gleich auf. Also Sie müssten mal pausieren, wenn Sie es selbst versuchen wollen. Ansonsten ist die Antwort nämlich ein. Es gibt keine solche Euler-Tour. Denn wenn es sie gäbe, dann müsste diese Tour, wann immer sie zu einem Stadtteil kommt, müsste auch wieder weggehen von diesem Stadtteil. Das heißt, jeder Stadtteil müsste eine gerade Anzahl Brücken anliegen haben, über die man gehen kann. Das ist hier aber in diesem Beispiel nicht der Fall. Denn eigentlich haben alle eine ungerade Anzahl. Alle Stadtteile haben eine ungerade Anzahl Brücken anliegen. Aber es würde schon reichen, wenn es nur einen Stadtteil gäbe, der eine ungerade Anzahl Brücken hat. Und das nennen wir auch den, also die Anzahl Kanten, die an einem Knoten anliegen, die nennen wir auch den Grad von diesem Knoten. Aber das sehen wir auch gleich nochmal.